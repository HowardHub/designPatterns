/**
 *
 * 享元模式
 * 享元模式（Flyweight Pattern）主要用于减少创建对象的数量，
 * 以减少内存占用和提高性能。这种类型的设计模式属于结构型模式，
 * 它提供了减少对象数量从而改善应用所需的对象结构的方式。
 *
 * 关键代码：用 HashMap 存储这些对象。
 * 应用实例： 1、JAVA 中的 String，如果有则返回，如果没有则创建一个字符串保存在字符串缓存池里面。
 *           2、数据库的数据池。
 *
 * 优点：大大减少对象的创建，降低系统的内存，使效率提高。
 *
 * 缺点：提高了系统的复杂度，需要分离出外部状态和内部状态，
 *      而且外部状态具有固有化的性质，不应该随着内部状态的变化而变化，否则会造成系统的混乱。
 *
 * 使用场景： 1、系统有大量相似对象。
 *           2、需要缓冲池的场景。
 *
 * 注意事项： 1、注意划分外部状态和内部状态，否则可能会引起线程安全问题。
 *          2、这些类必须有一个工厂对象加以控制。
 */
package com.ln.design.structural.flyweight;